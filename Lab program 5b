#include <stdio.h>
#include <stdlib.h>
struct ListNode {
    int val;
    struct ListNode *next;
};
struct ListNode* createNode(int value) {
    struct ListNode* newNode = (struct ListNode*)malloc(sizeof(struct ListNode));
    newNode->val = value;
    newNode->next = NULL;
    return newNode;
}
void insertNode(struct ListNode** head, int value) {
    struct ListNode *newNode = createNode(value);
    if (*head == NULL) {
        *head = newNode;
    } else {
        struct ListNode *temp = *head;
        while (temp->next != NULL) {
            temp = temp->next;
        }
        temp->next = newNode;
    }
}
void printList(struct ListNode *head) {
    struct ListNode *temp = head;
    while (temp != NULL) {
        printf("%d ", temp->val);
        temp = temp->next;
    }
    printf("\n");
}
void sortList(struct ListNode *head) {
    if (head == NULL || head->next == NULL) return; 
    struct ListNode *i, *j;
    int temp;
    for (i = head; i != NULL; i = i->next) {
        for (j = i->next; j != NULL; j = j->next) {
            if (i->val > j->val) {
                temp = i->val;
                i->val = j->val;
                j->val = temp;
            }
        }
    }
}
void deleteDuplicates(struct ListNode *head) {
    struct ListNode *current = head;
    while (current != NULL && current->next != NULL) {
        if (current->val == current->next->val) {
            struct ListNode *duplicate = current->next;
            current->next = current->next->next;
            free(duplicate);  
        } else {
            current = current->next;
        }
    }
}
int main() {
    struct ListNode *head = NULL;
    int n, value;
    printf("Enter the number of elements in the linked list: ");
    scanf("%d", &n);
    if (n <= 0) {
        printf("Empty list, nothing to process.\n");
        return 0;
    }
    printf("Enter %d elements: \n", n);
    for (int i = 0; i < n; i++) {
        scanf("%d", &value);
        insertNode(&head, value);
    }
    printf("Original list: ");
    printList(head);
    sortList(head);
    deleteDuplicates(head);
    printf("Sorted list without duplicates: ");
    printList(head);
    struct ListNode *temp;
    while (head != NULL) {
        temp = head;
        head = head->next;
        free(temp);
    }
    return 0;
}
