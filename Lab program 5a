#include <stdio.h>
#include <stdlib.h>
struct Node {
    int data;
    struct Node* next;
};
struct Node* createList(struct Node* head) {
    int n, value;
    printf("Enter the number of nodes: ");
    scanf("%d", &n);
    for (int i = 0; i < n; i++) {
        struct Node* newNode = (struct Node*)malloc(sizeof(struct Node));
        printf("Enter the value for node %d: ", i + 1);
        scanf("%d", &value);
        newNode->data = value;
        newNode->next = NULL;
        if (head == NULL) {
            head = newNode;  
        } else {
            struct Node* temp = head;
            while (temp->next != NULL) {
                temp = temp->next;
            }
            temp->next = newNode;  
        }
    }
    return head;
}
struct Node* deleteFirst(struct Node* head) {
    if (head == NULL) {
        printf("The list is already empty.\n");
        return NULL;
    }
 struct Node* temp = head;
    head = head->next; 
    free(temp);  
    return head;
}
struct Node* deleteElement(struct Node* head, int value) {
    if (head == NULL) {
        printf("The list is empty.\n");
        return NULL;
    }
    if (head->data == value) {
        struct Node* temp = head;
        head = head->next;
        free(temp);
        return head;
    }
    struct Node* current = head;
    while (current->next != NULL && current->next->data != value) {
        current = current->next;
    }
    if (current->next == NULL) {
        printf("Element not found in the list.\n");
        return head;
    }
    struct Node* temp = current->next;
    current->next = current->next->next;
    free(temp);
    return head;
}
struct Node* deleteLast(struct Node* head) {
    if (head == NULL) {
        printf("The list is empty.\n");
        return NULL;
    }
    if (head->next == NULL) { 
        free(head);
        return NULL;
    }
    struct Node* current = head;
    while (current->next != NULL && current->next->next != NULL) {
        current = current->next;
    }
    free(current->next);
    current->next = NULL;
    return head;
}
void displayList(struct Node* head) {
    if (head == NULL) {
        printf("The list is empty.\n");
        return;
    }
    struct Node* temp = head;
    printf("Linked List: ");
    while (temp != NULL) {
        printf("%d -> ", temp->data);
        temp = temp->next;
    }
    printf("NULL\n");
}
int main() {
    struct Node* head = NULL;
    int choice=0, value;
    while (choice != 6) {
        printf("\nMenu:\n");
        printf("1. Create Linked List\n");
        printf("2. Delete First Element\n");
        printf("3. Delete Specific Element\n");
        printf("4. Delete Last Element\n");
        printf("5. Display List\n");
        printf("6. Exit\n");
        printf("Enter your choice: ");
        scanf("%d", &choice);
        switch (choice) {
            case 1:
                head = createList(head);
                break;
            case 2:
                head = deleteFirst(head);
                break;
            case 3:
                printf("Enter the value to delete: ");
                scanf("%d", &value);
                head = deleteElement(head, value);
                break;
            case 4:
                head = deleteLast(head);
                break;
            case 5:
                displayList(head);
                break;
            case 6:
                printf("Exiting...\n");
                break;
            default:
                printf("Invalid choice. Please try again.\n");
        }
    }
    return 0;
}
